service:
  name: serverless-sensor-app

plugins:
  - serverless-webpack
  - serverless-iam-roles-per-function
  - serverless-reqvalidator-plugin
  - serverless-aws-documentation
  - serverless-dynamodb-local
  - serverless-offline

provider:
  name: aws
  runtime: nodejs12.x

  stage: ${opt:stage, 'dev'}
  region: ${opt:region, 'us-west-1'}

  environment:
    SENSOR_TABLE: Sensors-${self:provider.stage}
    IS_OFFLINE: false

custom:
  serverless-offline:
    httpPort: 3003

  dynamodb:
    start:
      seed: true
      port: 8000
      inMemory: true
      migrate: true
    stages:
      - dev
    seed:
      todos:
        sources:
          - table: ${self:provider.environment.SENSOR_TABLE}
            sources: [./todo.json]
       

functions:

  Auth:
    handler: src/lambda/auth/auth0Authorizer.handler

  # TODO: Configure this function
  GetSensors:
    handler: src/lambda/http/getSensors.handler
    events:
      - http:
          method: get
          path: sensors
          cors: true
#          authorizer: Auth
    iamRoleStatements:
      - Effect: Allow
        Action:
          - dynamodb:Scan
        Resource: arn:aws:dynamodb:${self:provider.region}:*:table/${self:provider.environment.SENSOR_TABLE}

  # TODO: Configure this function
  CreateSensor:
    handler: src/lambda/http/createSensor.handler
    events:
      - http:
          method: post
          path: sensors
    iamRoleStatements:
      - Effect: Allow
        Action:
          - dynamodb:PutItem
        Resource: arn:aws:dynamodb:${self:provider.region}:*:table/${self:provider.environment.SENSOR_TABLE}
      
  # TODO: Configure this function
  UpdateSensor:
    handler: src/lambda/http/updateSensor.handler
    events:
      - http:
          method: patch
          path: sensors/{sensorId}

  # TODO: Configure this function
  DeleteSensor:
    handler: src/lambda/http/deleteSensor.handler
    events:
      - http:
          method: delete
          path: sensors/{sensorId}

  # TODO: Configure this function
  GenerateUploadUrl:
    handler: src/lambda/http/generateUploadUrl.handler
    events:
      - http:
          method: post
          path: sensors/{sensorId}/attachment

resources:
  Resources:
    # TODO: Add any necessary AWS resources
    SensorDynamoDBTable:
      Type: AWS::DynamoDB::Table
      Properties:
        AttributeDefinitions:
          - AttributeName: sensorId
            AttributeType: S
        KeySchema:
          - AttributeName: sensorId
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST
        TableName: ${self:provider.environment.SENSOR_TABLE}